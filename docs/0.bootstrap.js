(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/brainfuc.js":
/*!**************************!*\
  !*** ../pkg/brainfuc.js ***!
  \**************************/
/*! exports provided: init_brainpluck, compile, debug_program, parse_and_run_bf, compile_bf_to_wasm, perf_bf, CompilationResult, DebugResult, __wbg_new_abda76e883ba8a5f, __wbg_stack_658279fe44541cf6, __wbg_error_f851667af71bcfc6, __wbindgen_object_drop_ref, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./brainfuc_bg.wasm */ \"../pkg/brainfuc_bg.wasm\");\n/* harmony import */ var _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./brainfuc_bg.js */ \"../pkg/brainfuc_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"init_brainpluck\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"init_brainpluck\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"compile\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"compile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"debug_program\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"debug_program\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parse_and_run_bf\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"parse_and_run_bf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"compile_bf_to_wasm\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"compile_bf_to_wasm\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"perf_bf\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"perf_bf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompilationResult\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"CompilationResult\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DebugResult\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"DebugResult\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_abda76e883ba8a5f\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_new_abda76e883ba8a5f\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_stack_658279fe44541cf6\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_stack_658279fe44541cf6\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_f851667af71bcfc6\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_error_f851667af71bcfc6\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_object_drop_ref\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _brainfuc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n\n\n\n//# sourceURL=webpack:///../pkg/brainfuc.js?");

/***/ }),

/***/ "../pkg/brainfuc_bg.js":
/*!*****************************!*\
  !*** ../pkg/brainfuc_bg.js ***!
  \*****************************/
/*! exports provided: init_brainpluck, compile, debug_program, parse_and_run_bf, compile_bf_to_wasm, perf_bf, CompilationResult, DebugResult, __wbg_new_abda76e883ba8a5f, __wbg_stack_658279fe44541cf6, __wbg_error_f851667af71bcfc6, __wbindgen_object_drop_ref, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"init_brainpluck\", function() { return init_brainpluck; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compile\", function() { return compile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debug_program\", function() { return debug_program; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parse_and_run_bf\", function() { return parse_and_run_bf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compile_bf_to_wasm\", function() { return compile_bf_to_wasm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"perf_bf\", function() { return perf_bf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompilationResult\", function() { return CompilationResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DebugResult\", function() { return DebugResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_abda76e883ba8a5f\", function() { return __wbg_new_abda76e883ba8a5f; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_stack_658279fe44541cf6\", function() { return __wbg_stack_658279fe44541cf6; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_f851667af71bcfc6\", function() { return __wbg_error_f851667af71bcfc6; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./brainfuc_bg.wasm */ \"../pkg/brainfuc_bg.wasm\");\n\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = new Uint8Array();\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(_brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet cachedInt32Memory0 = new Int32Array();\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(_brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachedInt32Memory0;\n}\n/**\n* Returns the version of the program.\n* @returns {string}\n*/\nfunction init_brainpluck() {\n    try {\n        const retptr = _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"init_brainpluck\"](retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1);\n    }\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @param {string} hir\n* @returns {CompilationResult}\n*/\nfunction compile(hir) {\n    const ptr0 = passStringToWasm0(hir, _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"compile\"](ptr0, len0);\n    return CompilationResult.__wrap(ret);\n}\n\n/**\n* @param {string} hir\n* @param {string} input\n* @returns {DebugResult}\n*/\nfunction debug_program(hir, input) {\n    const ptr0 = passStringToWasm0(hir, _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(input, _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"debug_program\"](ptr0, len0, ptr1, len1);\n    return DebugResult.__wrap(ret);\n}\n\n/**\n* @param {string} bf\n* @param {string} input\n* @returns {string}\n*/\nfunction parse_and_run_bf(bf, input) {\n    try {\n        const retptr = _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n        const ptr0 = passStringToWasm0(bf, _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(input, _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n        const len1 = WASM_VECTOR_LEN;\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"parse_and_run_bf\"](retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1);\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} bf\n* @returns {Uint8Array}\n*/\nfunction compile_bf_to_wasm(bf) {\n    try {\n        const retptr = _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n        const ptr0 = passStringToWasm0(bf, _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n        const len0 = WASM_VECTOR_LEN;\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"compile_bf_to_wasm\"](retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1 * 1);\n        return v1;\n    } finally {\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n    }\n}\n\n/**\n* @param {string} bf\n* @param {string} input\n* @returns {string}\n*/\nfunction perf_bf(bf, input) {\n    try {\n        const retptr = _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n        const ptr0 = passStringToWasm0(bf, _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(input, _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n        const len1 = WASM_VECTOR_LEN;\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"perf_bf\"](retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1);\n    }\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n/**\n*/\nclass CompilationResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CompilationResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_compilationresult_free\"](ptr);\n    }\n    /**\n    * @returns {string}\n    */\n    get sam() {\n        try {\n            const retptr = _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n            _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"compilationresult_sam\"](retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n            _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    get bf() {\n        try {\n            const retptr = _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n            _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"compilationresult_bf\"](retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n            _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1);\n        }\n    }\n}\n/**\n*/\nclass DebugResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(DebugResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_debugresult_free\"](ptr);\n    }\n    /**\n    * @returns {string}\n    */\n    get sam() {\n        try {\n            const retptr = _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n            _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"debugresult_sam\"](retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n            _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    get output() {\n        try {\n            const retptr = _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n            _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"debugresult_output\"](retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n            _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1);\n        }\n    }\n}\n\nfunction __wbg_new_abda76e883ba8a5f() {\n    const ret = new Error();\n    return addHeapObject(ret);\n};\n\nfunction __wbg_stack_658279fe44541cf6(arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ptr0 = passStringToWasm0(ret, _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nfunction __wbg_error_f851667af71bcfc6(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        _brainfuc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](arg0, arg1);\n    }\n};\n\nfunction __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../www/node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///../pkg/brainfuc_bg.js?");

/***/ }),

/***/ "../pkg/brainfuc_bg.wasm":
/*!*******************************!*\
  !*** ../pkg/brainfuc_bg.wasm ***!
  \*******************************/
/*! exports provided: memory, init_brainpluck, __wbg_compilationresult_free, compilationresult_sam, compilationresult_bf, compile, __wbg_debugresult_free, debugresult_sam, debugresult_output, debug_program, parse_and_run_bf, compile_bf_to_wasm, perf_bf, __wbindgen_add_to_stack_pointer, __wbindgen_free, __wbindgen_malloc, __wbindgen_realloc */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./brainfuc_bg.js */ \"../pkg/brainfuc_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/brainfuc_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var wasm_brainfuc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wasm-brainfuc */ \"../pkg/brainfuc.js\");\n\r\n\r\nfunction getElapsed(start) {\r\n    const diff = performance.now() - start;\r\n    if (diff >= 1000) {\r\n        return (diff * 0.001).toFixed(2).toString() + \"s\";\r\n    } else {\r\n        return diff.toString() + \"ms\";\r\n    }\r\n}\r\n\r\nlet examples = {};\r\nexamples[\"Prime test\"] = \r\n`fn is_prime(x: u32) -> bool {\r\n    if x == 1 {\r\n        return false;\r\n    }\r\n    if x % 2 == 0 {\r\n        return x == 2;\r\n    }\r\n    let d : u32 = 3;\r\n    while d * d <= x {\r\n        if x % d == 0 {\r\n            return false;\r\n        }\r\n        d = d + 2;\r\n    }\r\n    true\r\n}\r\n\r\nfn main() {\r\n    let x : u32 = 100000;\r\n    while x <= 100020 {\r\n        print(x);\r\n        if is_prime(x) {\r\n            println(\" is prime\");\r\n        } else {\r\n            println(\" is not prime\");\r\n        }\r\n        x = x + 1;\r\n    }\r\n}`;\r\n\r\nexamples[\"Naive Fibonacci\"] = \r\n`fn fib(x: u8) -> u8 {\r\n    if x <= 1 {\r\n        1\r\n    } else {\r\n        fib(x - 1) + fib(x - 2)\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let y : u8 = 0;\r\n    while y <= 12 {\r\n        print(\"fib(\");\r\n        print(y);\r\n        print(\") = \");\r\n        println(fib(y));\r\n        y = y + 1;\r\n    }\r\n}`;\r\n\r\nexamples[\"Fast Fibonacci\"] = \r\n`fn main() {\r\n    let x : u8 = 0;\r\n    let fib_x : u32 = 1;\r\n    let fib_x_minus_1 : u32 = 0;\r\n    while x <= 46 {\r\n        print(\"fib(\");\r\n        print(x);\r\n        print(\") = \");\r\n        println(fib_x);\r\n        let prev_fib_x : u32 = fib_x;\r\n        fib_x = fib_x + fib_x_minus_1;\r\n        fib_x_minus_1 = prev_fib_x;\r\n        x = x + 1;\r\n    }\r\n}`;\r\n\r\nexamples[\"Pointers\"] = \r\n`fn read_string(s_ptr: &u8) {\r\n    while 1 {\r\n        *s_ptr = read_char();\r\n        if *s_ptr == 10 {\r\n            *s_ptr = 0;\r\n            return;\r\n        }\r\n        s_ptr = s_ptr + 1;\r\n    }\r\n}\r\n\r\nfn print_string(s_ptr: &u8) {\r\n    while *s_ptr != 0 {\r\n        print_char(*s_ptr);\r\n        s_ptr = s_ptr + 1;\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let top_of_stack : u8 = 0;\r\n    let s_ptr : &u8 = &top_of_stack + 1000;\r\n    println(\"Please enter your name: \");\r\n    read_string(s_ptr);\r\n    print(\"Hello \");\r\n    print_string(s_ptr);\r\n    println(\".\");\r\n}`;\r\n\r\nexamples[\"Conversion\"] = \r\n`fn u32_to_u8(x: u32) -> u8 {\r\n    *(&x + 3)\r\n}\r\n\r\nfn u8_to_u32(x: u8) -> u32 {\r\n    let result : u32 = 0;\r\n    let p : &u8 = &result + 3;\r\n    *p = x;\r\n    result\r\n}\r\n\r\nfn main() {\r\n    println(u32_to_u8(3));\r\n    println(u8_to_u32(7));\r\n}`;\r\n\r\nlet examples_order = [\"Prime test\", \"Naive Fibonacci\", \"Fast Fibonacci\", \"Pointers\"];\r\nlet default_example = \"Prime test\";\r\n\r\nfor (let example_name of examples_order) {\r\n    let option = document.createElement(\"option\");\r\n    option.value = example_name;\r\n    option.text = example_name;\r\n    option.selected = example_name == default_example;\r\n    document.getElementById(\"example_select\").appendChild(option);\r\n}\r\ndocument.getElementById(\"hir_code\").textContent = examples[default_example];\r\n\r\n// Changing example:\r\n\r\nfunction changeExample() {\r\n    let example_name = document.getElementById(\"example_select\").value;\r\n    document.getElementById(\"hir_code\").value = examples[example_name];\r\n}\r\ndocument.getElementById(\"example_select\").onchange = changeExample;\r\n\r\n// Compiling:\r\n\r\ndocument.getElementById(\"compile_button\").onclick = function() {\r\n    let hir = document.getElementById(\"hir_code\").value;\r\n\r\n    try {\r\n        let compiled = wasm_brainfuc__WEBPACK_IMPORTED_MODULE_0__[\"compile\"](hir);\r\n        document.getElementById(\"compiled_sam\").value = compiled.sam;\r\n        document.getElementById(\"compiled_bf\").value = compiled.bf;\r\n    } catch (err) {\r\n        alert(\"Error compiling code. See the console for more info. It likely won't be very helpful info though, because generating nice compiler errors would've been a lot more work.\");\r\n    }\r\n};\r\n\r\n// Debugging:\r\n\r\ndocument.getElementById(\"debug_button\").onclick = function() {\r\n    let hir = document.getElementById(\"hir_code\").value;\r\n    let input = document.getElementById(\"bf_input\").value;\r\n\r\n    let result = wasm_brainfuc__WEBPACK_IMPORTED_MODULE_0__[\"debug_program\"](hir, input);\r\n\r\n    document.getElementById(\"compiled_sam\").value = result.sam;\r\n    document.getElementById(\"compiled_bf\").value = \"Debugging runs the assembly code directly\";\r\n    document.getElementById(\"bf_output\").value = result.output;\r\n};\r\n\r\n// JIT:\r\n\r\nlet myWorker = null;\r\ndocument.getElementById(\"jit_run_button\").onclick = function() {\r\n    if (myWorker != null) {\r\n        myWorker.terminate();\r\n    }\r\n    let runBfStart = performance.now();\r\n    myWorker = new Worker('worker.js');\r\n    myWorker.onmessage = (e) => {\r\n        let msg_type = e.data[0];\r\n        if (msg_type == \"output\") {\r\n            document.getElementById(\"bf_output\").value += String.fromCharCode(e.data[1]);\r\n        } else if (msg_type == \"finished\") {\r\n            document.getElementById(\"bf_status\").textContent = \"finished in \"+getElapsed(runBfStart);\r\n            document.getElementById(\"bf_status\").className = \"status_finished\";\r\n            document.getElementById(\"stop_bf_button\").disabled = true;\r\n        } else if (msg_type == \"need_more_input\") {\r\n            document.getElementById(\"bf_status\").textContent = \"awaiting input\";\r\n            document.getElementById(\"bf_status\").className = \"status_awaiting_input\";\r\n        } else if (msg_type == \"error\") {\r\n            document.getElementById(\"bf_status\").textContent = e.data[1];\r\n            document.getElementById(\"bf_status\").className = \"status_crashed\";\r\n        } else {\r\n            console.error(\"Unknown message type \"+msg_type);\r\n        }\r\n    }\r\n    let bf = document.getElementById(\"compiled_bf\").value;\r\n\r\n    try {\r\n        let result = wasm_brainfuc__WEBPACK_IMPORTED_MODULE_0__[\"compile_bf_to_wasm\"](bf);\r\n        myWorker.postMessage([\"start\", result]);\r\n    } catch (err) {\r\n        alert(\"Error compiling brainfuck code. See the console for more info.\");\r\n    }\r\n\r\n    document.getElementById(\"bf_output\").value = \"\";\r\n    document.getElementById(\"bf_status\").textContent = \"running\";\r\n    document.getElementById(\"bf_status\").className = \"status_running\";\r\n    document.getElementById(\"stop_bf_button\").disabled = false;\r\n    document.getElementById(\"stop_bf_button\").onclick = () => {\r\n        myWorker.terminate();\r\n        document.getElementById(\"bf_status\").textContent = \"stopped\";\r\n        document.getElementById(\"bf_status\").className = \"status_stopped\";\r\n    };\r\n}\r\n\r\n// Copy BF button:\r\n\r\ndocument.getElementById(\"bf_copy_button\").onclick = function() {\r\n    let textarea = document.getElementById(\"compiled_bf\");\r\n    textarea.select();\r\n    document.execCommand(\"copy\");\r\n}\r\nconsole.log(\"Brainpluck version: \"+wasm_brainfuc__WEBPACK_IMPORTED_MODULE_0__[\"init_brainpluck\"]());\r\n\r\n// Send input button:\r\n\r\nfunction sendInput() {\r\n    if (myWorker != null) {\r\n        let input = document.getElementById(\"bf_input\").value;\r\n        myWorker.postMessage([\"add_input\", input]);\r\n        document.getElementById(\"bf_input\").value = \"\";\r\n    }\r\n}\r\ndocument.getElementById(\"send_input_button\").onclick = sendInput;\r\n\r\n// Running:\r\n\r\ndocument.getElementById(\"run_button\").onclick = function() {\r\n    let bf = document.getElementById(\"compiled_bf\").value;\r\n    let input = document.getElementById(\"bf_input\").value;\r\n\r\n    document.getElementById(\"bf_output\").value = \"Running...\\n\\nThis page will freeze until the entire program finishes.\";\r\n\r\n    setTimeout(() => {\r\n        let result = wasm_brainfuc__WEBPACK_IMPORTED_MODULE_0__[\"parse_and_run_bf\"](bf, input);\r\n\r\n        document.getElementById(\"bf_output\").value = result;\r\n    });\r\n}\r\n\r\n// Perf:\r\n\r\ndocument.getElementById(\"perf_button\").onclick = function() {\r\n    let bf = document.getElementById(\"compiled_bf\").value;\r\n    let input = document.getElementById(\"bf_input\").value;\r\n\r\n    document.getElementById(\"bf_output\").value = \"Running...\\n\\nThis page will freeze until the entire program finishes.\";\r\n\r\n    setTimeout(() => {\r\n        let result = wasm_brainfuc__WEBPACK_IMPORTED_MODULE_0__[\"perf_bf\"](bf, input);\r\n\r\n        document.getElementById(\"bf_output\").value = result;\r\n        document.getElementById(\"bf_output\").disabled = false;\r\n    });\r\n}\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/harmony-module.js?");

/***/ })

}]);